{
  "openapi": "3.0.3",
  "info": {
    "title": "Group M1 Spatial Player API 1.0",
    "description": "That is a first draft of M1 api, at this moment we are have a api for control playing sound file [based on dash stream]",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Tracks"
    },
    {
      "name": "Auth",
      "description": "Users are authenticated using the generated and stored keys in the cookie. For each unique visitor, a separate key is generated (regardless of whether the user was authorized or not), which will be transmitted in the response header during any first request from the user. During authorization, a user session is created that will be identified with this key"
    },
    {
      "name": "Playlists",
      "description": "The dashboard administrator has the ability to create, update or delete any playlist. At the same time, both authorized and not authorized users have a chance to get a list of playlists with available tracks information (track id)"
    },
    {
      "name": "Users"
    },
    {
      "name": "Profile",
      "description": "This resource is used for getting current user information by self and updating available profile information, for example, password"
    }
  ],
  "paths": {
    "/tracks": {
      "get": {
        "tags": [
          "Tracks"
        ],
        "summary": "List all tracks",
        "description": "This GET methods have public access, but number of tracks depends on the user auth and user role; all other methods able only for admin user role",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "schema": {
                "$ref": "#/components/schemas/track"
              },
              "example": [
                {
                  "id": "d8b68448-d7ae-413a-89bf-308ed9c7ef46",
                  "name": "m1-debug-shrtpt-m1spatial.wav",
                  "originalname": "m1-debug-shrtpt-m1spatial.wav",
                  "size": "12701536",
                  "mimetype": "audio/wav",
                  "prepared": "true",
                  "created": "2021-10-05T19:45:52.756+03:00",
                  "updated": "2021-10-05T19:45:52.689+03:00"
                },
                {
                  "id": "6d0e43df-d826-48f9-b4ff-1215f9ea2a7e",
                  "name": "m1-debug-visual.wav",
                  "originalname": "m1-debug-visual.wav",
                  "size": "6880336",
                  "mimetype": "audio/wav",
                  "prepared": "false",
                  "created": "2021-10-05T19:45:52.756+03:00",
                  "updated": "2021-10-05T19:45:52.756+03:00"
                },
                {
                  "id": "82a2ec62-8c56-41e4-a036-cd1d16ee1633",
                  "name": "test.wav",
                  "originalname": "test.wav",
                  "size": "23543824",
                  "mimetype": "audio/wav",
                  "prepared": "false",
                  "created": "2021-10-05T19:45:52.758+03:00",
                  "updated": "2021-10-05T19:45:52.756+03:00"
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/track"
                },
                "example": [
                  {
                    "id": "d8b68448-d7ae-413a-89bf-308ed9c7ef46",
                    "name": "m1-debug-shrtpt-m1spatial.wav",
                    "originalname": "m1-debug-shrtpt-m1spatial.wav",
                    "size": "12701536",
                    "mimetype": "audio/wav",
                    "prepared": "true",
                    "created": "2021-10-05T19:45:52.756+03:00",
                    "updated": "2021-10-05T19:45:52.689+03:00"
                  },
                  {
                    "id": "6d0e43df-d826-48f9-b4ff-1215f9ea2a7e",
                    "name": "m1-debug-visual.wav",
                    "originalname": "m1-debug-visual.wav",
                    "size": "6880336",
                    "mimetype": "audio/wav",
                    "prepared": "false",
                    "created": "2021-10-05T19:45:52.756+03:00",
                    "updated": "2021-10-05T19:45:52.756+03:00"
                  },
                  {
                    "id": "82a2ec62-8c56-41e4-a036-cd1d16ee1633",
                    "name": "test.wav",
                    "originalname": "test.wav",
                    "size": "23543824",
                    "mimetype": "audio/wav",
                    "prepared": "false",
                    "created": "2021-10-05T19:45:52.758+03:00",
                    "updated": "2021-10-05T19:45:52.756+03:00"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/tracks/{id}": {
      "get": {
        "tags": [
          "Tracks"
        ],
        "summary": "Start a play sound track",
        "description": "This hook used for start preapre mainifest for track",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "string",
              "schema": {
                "$ref": "#/components/schemas/track{id}"
              },
              "example": null
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful operation without content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/track{id}"
                },
                "example": null
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tracks"
        ],
        "summary": "Delete track",
        "description": "Delete track by id",
        "parameters":  [
          {
            "name": "id",
            "in": "path",
            "description": "track id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "type": "string",
              "schema": {
                "$ref": "#/components/schemas/track{id}"
              },
              "example": null
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful operation without content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/track{id}"
                },
                "example": null
              }
            }
          }
        }
      }
    },
    "/dash/static/{id}/manifest.mpd": {
      "get": {
        "tags": [
          "Tracks"
        ],
        "summary": "Dash manifest file",
        "description": "That is the main resource for playing any our sound files, used standard dash stream mainifest file, documentation for [dash.js](https://cdn.dashjs.org/latest/jsdoc/module-MediaPlayer.html)",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "string",
              "schema": {
                "$ref": "#/components/schemas/track{id}"
              },
              "example": {
                "id": "6d0e43df-d826-48f9-b4ff-1215f9ea2a7e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "produces": [
              "application/dash+xml"
            ],
            "content": {
              "application/dash+xml": {
              }
            }
          }
        }
      }
    },
    "/upload": {
      "post": {
        "tags": [
          "Tracks"
        ],
        "summary": "Upload a New Track",
        "description": "Dashboard administrator has ability to upload new track to the backend, can be attached more then one files",
        "request": "multipart/form-data",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "schema": {
                "$ref": "#/components/schemas/upload"
              },
              "example": [
                {
                  "file": "binary"
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/track"
                },
                "example": [
                  {
                    "id": "82a2ec62-8c56-41e4-a036-cd1d16ee1633",
                    "name": "test.wav",
                    "originalname": "test.wav",
                    "size": 23543824,
                    "mimetype": "audio/wav",
                    "prepared": false,
                    "created": "2021-10-05T19:45:52.758+03:00",
                    "updated": "2021-10-05T19:45:52.756+03:00"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "request": "application/json",
        "parameters": [
          {
            "name": "login",
            "description": "user nickname or email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "description": "user password",
            "required": true,
            "type": "string"
          }
        ],
        "attributes": "true",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/auth"
              },
              "example": {
                  "login": "test",
                  "password": "test"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user-auth"
                },
                "example":   {
                  "user": {
                    "id": "ca360e68-8b2d-4cbb-b389-cbcc4a0d986a",
                    "nickname": "m1",
                    "email": "support@mach1.tech",
                    "role": "admin",
                    "lastSeen": "",
                    "created": "2021-10-05T21:35:55.425+03:00",
                    "updated": "2021-10-05T21:35:55.425+03:00"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "description": "Removing user sessions",
        "responses": {
          "204": {
            "description": "Successful operation without content",
            "content": {
              "application/json": {
                "example": null
              }
            }
          }
        }
      }
    },
    "/playlists": {
      "get": {
        "tags": [
          "Playlists"
        ],
        "summary": "List all playlists",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "schema": {
                "$ref": "#/components/schemas/playlist"
              },
              "example": [
                {
                  "id": "c69fd5ec-e6bd-4e48-b2f9-a45d84099d2e",
                  "name": "The Awesome Playlist",
                  "tracks": ["d8b68448-d7ae-413a-89bf-308ed9c7ef46"],
                  "permissions": [],
                  "visibility": false,
                  "created": "2021-10-05T21:35:55.425+03:00",
                  "updated": "2021-10-05T21:35:55.425+03:00"
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlist"
                },
                "example": [
                  {
                    "id": "c69fd5ec-e6bd-4e48-b2f9-a45d84099d2e",
                    "name": "The Awesome Playlist",
                    "tracks": ["d8b68448-d7ae-413a-89bf-308ed9c7ef46"],
                    "permissions": [],
                    "visibility": false,
                    "created": "2021-10-05T21:35:55.425+03:00",
                    "updated": "2021-10-05T21:35:55.425+03:00"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Playlists"
        ],
        "summary": "Create a New Playlist",
        "request": "application/json",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/playlist-name"
              },
              "example": {
                "name": "The Awesome Playlist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlist"
                },
                "example": {
                  "id": "c69fd5ec-e6bd-4e48-b2f9-a45d84099d2e",
                  "name": "The Awesome Playlist",
                  "tracks": [],
                  "permissions": [],
                  "visibility": false,
                  "created": "2021-10-05T21:35:55.425+03:00",
                  "updated": "2021-10-05T21:35:55.425+03:00"
                }
              }
            }
          }
        }
      }
    },
    "/playlists/{id}": {
      "put": {
        "tags": [
          "Playlists"
        ],
        "summary": "Update playlist",
        "parameters":  [
          {
            "name": "id",
            "in": "path",
            "description": "playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/playlist{id}"
              },
              "example": {
                "tracks": ["1db814ff-263f-4e92-9865-4701a9efeac1"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlist"
                },
                "example": {
                  "id": "c69fd5ec-e6bd-4e48-b2f9-a45d84099d2e",
                  "name": "The Awesome Playlist",
                  "tracks": ["1db814ff-263f-4e92-9865-4701a9efeac1"],
                  "permissions": [],
                  "visibility": false,
                  "created": "2021-10-05T21:35:55.425+03:00",
                  "updated": "2021-10-05T21:35:55.425+03:00"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Playlists"
        ],
        "summary": "Delete Playlist",
        "parameters":  [
          {
            "name": "id",
            "in": "path",
            "description": "playlist id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "type": "string",
              "schema": {
                "$ref": "#/components/schemas/playlist{id}"
              },
              "example": null
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful operation without content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/playlist{id}"
                },
                "example": null
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List all users",
          "requestBody": {
          "content": {
            "application/json": {
              "type": "array",
              "items": {
                "type": "object"
              },
              "schema": {
                "$ref": "#/components/schemas/users"
              },
              "example": [
                {
                  "id": "ca360e68-8b2d-4cbb-b389-cbcc4a0d986a",
                  "nickname": "m1",
                  "email": "support@mach1.tech",
                  "role": "admin",
                  "lastSeen": "",
                  "created": "2021-10-05T21:35:55.425+03:00",
                  "updated": "2021-10-05T21:35:55.425+03:00"
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                },
                "example": [
                  {
                    "id": "ca360e68-8b2d-4cbb-b389-cbcc4a0d986a",
                    "nickname": "m1",
                    "email": "support@mach1.tech",
                    "role": "admin",
                    "lastSeen": "",
                    "created": "2021-10-05T21:35:55.425+03:00",
                    "updated": "2021-10-05T21:35:55.425+03:00"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a New User",
        "request": "application/json",
        "requestBody": {
          "content": {
            "application/json": {
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/user-new"
              },
              "example": {
                "nickname": "m1",
                "email": "support@mach1.tech",
                "role": "admin",
                "password": "some_new_user_password"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                },
                "example": {
                  "id": "ca360e68-8b2d-4cbb-b389-cbcc4a0d986a",
                  "nickname": "m1",
                  "email": "support@mach1.tech",
                  "role": "admin",
                  "lastSeen": "",
                  "created": "2021-10-05T21:35:55.425+03:00",
                  "updated": "2021-10-05T21:35:55.425+03:00"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "responses": {
          "405": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete track by id",
        "parameters":  [
          {
            "name": "id",
            "in": "path",
            "description": "user id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "type": "string",
              "schema": {
                "$ref": "#/components/schemas/user{id}"
              },
              "example": null
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful operation without content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user{id}"
                },
                "example": null
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "description": "Checking and returning current user session: if exist return 200 else empty body and 204; Removing session object if a session was corrupted or expired",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "type": "object",
                "schema": {
                  "$ref": "#/components/schemas/user"
                },
                "example": {
                  "user": {
                    "id": "ca360e68-8b2d-4cbb-b389-cbcc4a0d986a",
                    "nickname": "m1",
                    "email": "support@mach1.tech",
                    "role": "admin",
                    "lastSeen": "",
                    "created": "2021-10-05T21:35:55.425+03:00",
                    "updated": "2021-10-05T21:35:55.425+03:00"
                  }
                }
              }
            },
            "required": true
          },
          "204": {
            "summary": "if the user is not authorized and session is empty",
            "description": "Successful operation without content"
          },
          "403": {
            "summary": "Response can return 4** error if a session was corrupted or expired with json body and error messages",
            "description": "Error",
            "content": {
              "application/json": {
                "type": "object",
                "example": {
                  "message": "error message"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "track": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "id",
            "name",
            "originalname",
            "size",
            "mimetype",
            "prepared",
            "created",
            "updated"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "track id"
            },
            "name": {
              "type": "string",
              "description": "track name"
            },
            "originalname": {
              "type": "string",
              "description": "track original file name"
            },
            "size": {
              "type": "number",
              "description": "file size in bytes"
            },
            "mimetype": {
              "type": "string",
              "description": "file mimetype"
            },
            "prepared": {
              "type": "boolean",
              "description": "set in true if track has prepared dash manifest"
            },
            "created": {
              "type": "string",
              "description": "timestamp with creation date in the ISO format"
            },
            "updated": {
              "type": "string",
              "description": "timestamp with last update date in the ISO format"
            }
          }
        }
      },
      "track{id}": {
        "type": "string",
        "required": "id",
        "properties": {
          "id": {
            "type": "string",
            "description": "track id"
          }
        }
      },
      "upload": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "auth": {
        "type": "object",
        "items": {
          "type": "string",
          "required": [
            "login",
            "password"
          ]
        },
        "properties": {
          "login": {
            "type": "string",
            "description": "user nickname or email"
          },
          "password": {
            "type": "string",
            "description": "user password"
          }
        }
      },
      "user-auth": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "required": [
              "id",
              "nickname",
              "email",
              "role",
              "created",
              "updated"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "user id"
              },
              "nickname": {
                "type": "string",
                "description": "user nickname (can be used as login)"
              },
              "email": {
                "type": "string",
                "description": "user email (can be used as login)"
              },
              "role": {
                "type": "string",
                "description": "one of two type of user roles: 'user' or 'admin'"
              },
              "lastSeen": {
                "type": "string",
                "description": "timestamp with last user auth date in the ISO format (optional and can be empty)"
              },
              "created": {
                "type": "string",
                "description": "timestamp with creation date in the ISO format"
              },
              "updated": {
                "type": "string",
                "description": "timestamp with last update date in the ISO format"
              }
            }
          }
        }
      },
      "playlist": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "id",
            "name",
            "visibility",
            "created",
            "updated"
          ],
          "properties": {
            "id": {
              "type": "string",
              "description": "playlist id"
            },
            "name": {
              "type": "string",
              "description": "playlist name"
            },
            "tracks": {
              "type": "array",
              "description": "array with attached tracks id (available only for admins)"
            },
            "permissions": {
              "type": "array",
              "description": "array with attached users id (available only for admins)"
            },
            "visibility": {
              "type": "boolean",
              "description": "value to present has this playlist public visibility or not"
            },
            "created": {
              "type": "string",
              "description": "timestamp with creation date in the ISO format"
            },
            "updated": {
              "type": "string",
              "description": "timestamp with last update date in the ISO format"
            }
          }
        }
      },
      "playlist-name": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "playlist name"
          }
        }
      },
      "playlist{id}": {
        "type": "object",
        "required": [
          "name",
          "visibility"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "playlist name"
          },
          "tracks": {
            "type": "array",
            "description": "array with attached tracks id"
          },
          "permissions": {
            "type": "array",
            "description": "array with attached users id"
          },
          "visibility": {
            "type": "boolean",
            "description": "value to present has this playlist public visibility or not"
          }
        }
      },
      "users": {
        "type": "array",
        "properties": {
          "user": {
            "type": "object",
            "required": [
              "id",
              "nickname",
              "email",
              "role",
              "created",
              "updated"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "user id"
              },
              "nickname": {
                "type": "string",
                "description": "user nickname (can be used as login)"
              },
              "email": {
                "type": "string",
                "description": "user email (can be used as login)"
              },
              "role": {
                "type": "string",
                "description": "one of two type of user roles: 'user' or 'admin'"
              },
              "lastSeen": {
                "type": "string",
                "description": "timestamp with last user auth date in the ISO format (optional and can be empty)"
              },
              "created": {
                "type": "string",
                "description": "timestamp with creation date in the ISO format"
              },
              "updated": {
                "type": "string",
                "description": "timestamp with last update date in the ISO format"
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "required": [
              "id",
              "nickname",
              "email",
              "role",
              "created",
              "updated"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "user id"
              },
              "nickname": {
                "type": "string",
                "description": "user nickname (can be used as login)"
              },
              "email": {
                "type": "string",
                "description": "user email (can be used as login)"
              },
              "role": {
                "type": "string",
                "description": "one of two type of user roles: 'user' or 'admin'"
              },
              "lastSeen": {
                "type": "string",
                "description": "timestamp with last user auth date in the ISO format (optional and can be empty)"
              },
              "created": {
                "type": "string",
                "description": "timestamp with creation date in the ISO format"
              },
              "updated": {
                "type": "string",
                "description": "timestamp with last update date in the ISO format"
              }
            }
          }
        }
      },
      "user-new": {
        "type": "object",
        "required": [
          "nickname",
          "email",
          "role",
          "password"
        ],
        "properties": {
          "nickname": {
            "type": "string",
            "description": "user nickname (can be used as login)"
          },
          "email": {
            "type": "string",
            "description": "user email (can be used as login)"
          },
          "role": {
            "type": "string",
            "description": "one of two type of user roles: 'user' or 'admin'"
          },
          "password": {
            "type": "string",
            "description": "user password, min length = 8"
          }
        }
      },
      "user{id}": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "id (string, required) - user id"
          }
        }
      }
    }
  }
}