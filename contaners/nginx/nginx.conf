daemon off;

user nginx;

events {
  worker_connections 1024;
}

rtmp {
  server {
    listen ${STREAM_PORT};
    application live {
      live off;
      exec ffmpeg -analyzeduration 10M -i rtmp://127.0.0.1/live/$name -strict -2 -c:a libopus -mapping_family 255 ${FFMPEG_FLAGS} -f dash /opt/data/dash/$name.mpd 2>>/tmp/nginx_rtmp_ffmpeg_log;
    }
  }
}

http {
  lua_package_path "/usr/local/luajit/lib/lua/?.lua;;";

  init_by_lua_block {
    require "resty.core"
    collectgarbage("collect")  -- just to collect any garbage
  }

  server {
    listen ${HTTP_PORT};

    location = / {
      return 200 'Nginx server started';
    }

    location /play {
      content_by_lua_block {
        if ngx.var.arg_sound == nil then
          command = "/share/sound/switcher.sh"
        else
          command = "/share/sound/switcher.sh "..ngx.var.arg_sound
        end
        local handle = io.popen(command)
        local result = handle:read("*a");
        handle:close();

        ngx.say(result)
      }
    }

    location /dash {
      types {
        application/dash+xml mpd;
        video/mp4 mp4;
      }
      root /opt/data;

      add_header Cache-Control no-cache;
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Expose-Headers Content-Length;
    }
  }
}
